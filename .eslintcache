[{"C:\\Projects\\Web\\retail-so-react\\src\\index.js":"1","C:\\Projects\\Web\\retail-so-react\\src\\reportWebVitals.js":"2","C:\\Projects\\Web\\retail-so-react\\src\\App.js":"3","C:\\Projects\\Web\\retail-so-react\\src\\pages\\Login.js":"4","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Controls.js":"5","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Password.js":"6","C:\\Projects\\Web\\retail-so-react\\src\\components\\useForm.js":"7","C:\\Projects\\Web\\retail-so-react\\src\\actions\\order.js":"8","C:\\Projects\\Web\\retail-so-react\\src\\actions\\api.js":"9","C:\\Projects\\Web\\retail-so-react\\src\\actions\\store.js":"10","C:\\Projects\\Web\\retail-so-react\\src\\reducers\\index.js":"11","C:\\Projects\\Web\\retail-so-react\\src\\reducers\\order.js":"12","C:\\Projects\\Web\\retail-so-react\\src\\pages\\Main.js":"13","C:\\Projects\\Web\\retail-so-react\\src\\components\\useTable.js":"14","C:\\Projects\\Web\\retail-so-react\\src\\components\\Header.js":"15","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\ActionButton.js":"16","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Input.js":"17","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Button.js":"18","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\ActionButtonBadge.js":"19","C:\\Projects\\Web\\retail-so-react\\src\\pages\\MainForm.js":"20","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Popup.js":"21","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\DatePicker.js":"22","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Select.js":"23","C:\\Projects\\Web\\retail-so-react\\src\\pages\\GalleryList.js":"24","C:\\Projects\\Web\\retail-so-react\\src\\pages\\Gallery.js":"25"},{"size":462,"mtime":1609415179628,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":989,"mtime":1610784010666,"results":"29","hashOfConfig":"27"},{"size":5719,"mtime":1609398708100,"results":"30","hashOfConfig":"27"},{"size":473,"mtime":1609484351124,"results":"31","hashOfConfig":"27"},{"size":1627,"mtime":1609302519852,"results":"32","hashOfConfig":"27"},{"size":1144,"mtime":1609588563735,"results":"33","hashOfConfig":"27"},{"size":1997,"mtime":1610526345191,"results":"34","hashOfConfig":"27"},{"size":736,"mtime":1610526056378,"results":"35","hashOfConfig":"27"},{"size":334,"mtime":1610526237257,"results":"36","hashOfConfig":"27"},{"size":131,"mtime":1609396400487,"results":"37","hashOfConfig":"27"},{"size":463,"mtime":1609561096068,"results":"38","hashOfConfig":"27"},{"size":8922,"mtime":1610526580483,"results":"39","hashOfConfig":"27"},{"size":4311,"mtime":1610524590884,"results":"40","hashOfConfig":"27"},{"size":2687,"mtime":1609408951173,"results":"41","hashOfConfig":"27"},{"size":893,"mtime":1609418618364,"results":"42","hashOfConfig":"27"},{"size":614,"mtime":1609499616062,"results":"43","hashOfConfig":"27"},{"size":707,"mtime":1609499911037,"results":"44","hashOfConfig":"27"},{"size":985,"mtime":1609418603822,"results":"45","hashOfConfig":"27"},{"size":4075,"mtime":1610526191598,"results":"46","hashOfConfig":"27"},{"size":1992,"mtime":1609560772246,"results":"47","hashOfConfig":"27"},{"size":824,"mtime":1609486712487,"results":"48","hashOfConfig":"27"},{"size":1570,"mtime":1609647382552,"results":"49","hashOfConfig":"27"},{"size":955,"mtime":1610799853329,"results":"50","hashOfConfig":"27"},{"size":3853,"mtime":1610800188845,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1j0wu8k",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\Web\\retail-so-react\\src\\index.js",[],["113","114"],"C:\\Projects\\Web\\retail-so-react\\src\\reportWebVitals.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\App.js",["115","116","117","118"],"import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./actions/store\";\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\nimport Header from \"./components/Header\";\nimport GalleryList from \"./pages/GalleryList\";\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: \"#3c44b126\",\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: \"#f8324526\",\n    },\n    background: {\n      default: \"#EAEDED\",\n    },\n  },\n  typography: {\n\t\tfontFamily: ['Kanit', 'sans-serif'].join(','),\n\t},\n\n});\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        {/* <Login ></Login> */}\n        <Header ></Header>\n\n          {/* <Main></Main> */}\n          <GalleryList></GalleryList>\n       \n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Projects\\Web\\retail-so-react\\src\\pages\\Login.js",["119","120","121","122","123","124","125"],"import { Avatar, Button, FilledInput, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Paper, TextField, Typography, withStyles } from '@material-ui/core'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx';\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { useForm, Form } from \"../components/useForm\";\r\nimport { ACTION_TYPES } from '../actions/order';\r\nimport * as actions from \"../actions/order\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    paper: {\r\n        textAlign: 'center',\r\n        height:'100%',\r\n        marginTop: '5%',\r\n        marginLeft: '25%',\r\n        marginRight: '25%',\r\n        marginButtom: '5%',\r\n        padding: theme.spacing(2),\r\n        backgroundImage: `url(${\"/images/starmark_01.jpg\"})`\r\n    },\r\n    gridItem: {\r\n        textAlign: 'center',\r\n        alignItems:\"center\",\r\n        paddingTop:\"20%\",\r\n        \r\n    },\r\n  \r\n    textField: {\r\n        width: '60%',\r\n        margin: theme.spacing(1),\r\n    },\r\n    logoSize: {\r\n        marginLeft: '30%',\r\n        width: theme.spacing(30),\r\n        height: theme.spacing(20),\r\n\r\n    },\r\n\r\n})\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        width: 200,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nconst initialFieldValue = {\r\n    id: 0,\r\n    userName: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n}\r\n\r\nconst Login = ({ classes, ...props }) => {\r\n\r\n    const [values, setValues] = useState(initialFieldValue)\r\n\r\n    useEffect(() => {\r\n       \r\n    }, [])\r\n\r\n    const handleInputChange = e => {\r\n\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handlePasswordChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const onSuccess = () => {\r\n            console.log(\"Submitted successfully.\")\r\n        }\r\n\r\n        props.fetchLoginOrder(values.userName, values.password, onSuccess);\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={3}\r\n        image=\"/images/logo_starmark.jpg\"\r\n        >\r\n            <form autocomq=\"off\" container className={classes.root} onSubmit={handleSubmit}>\r\n                <Grid container>\r\n                    <Grid item xs={12} className={classes.gridItem}>\r\n                        <div style={{ padding: '5%' }}>\r\n                            <Typography variant=\"h3\">\r\n                                Retail - SO\r\n                            </Typography>\r\n                            {/* <Avatar alt=\"Remy Sharp\" src=\"/images/logo_starmark.jpg\" className={classes.logoSize}></Avatar> */}\r\n                        </div>\r\n\r\n                        <TextField className={classes.textField}\r\n                            name=\"userName\"\r\n                            label=\"User Name\"\r\n                            variant=\"filled\"\r\n                            value={values.userName}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <FormControl className={classes.textField} variant=\"filled\">\r\n                            <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\r\n                            <FilledInput\r\n                           \r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                onChange={handlePasswordChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                        <div style={{ padding: '5%' }}>\r\n                            <StyledButton type=\"submit\">Login</StyledButton>\r\n                        </div>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    orderList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchLoginOrder: actions.fetchLogin\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps) (withStyles(styles)(Login));\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Controls.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Password.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\useForm.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\actions\\order.js",["126"],"import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE: 'CREATE',\r\n    UPDATE: 'UPDATE',\r\n    DELETE: 'DELETE',\r\n    FETCH_ALL: 'FETCH_ALL',\r\n    FETCH_LOGIN: 'FETCH_LOGIN',\r\n    FETCH_STORE: 'FETCH_STORE'\r\n}\r\n\r\nconst stored = [];\r\nfunction insertStored(recId, storeId, name) {\r\n    return {recId, storeId, name };\r\n}\r\n\r\nexport const fetchLogin = (user, password, onSuccess) => dispatch => {\r\n    api.order().fetchLogin(user, password)\r\n        .then(response => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_LOGIN,\r\n                payload: response.data\r\n            })\r\n            onSuccess();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchAll = () => (dispatch) => {\r\n\r\n    api.order().fetchAll()\r\n        .then(response => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_ALL,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchStore = (name, type) => dispatch => {\r\n    api.store().fetchStore(name, type)\r\n        .then(response => {\r\n\r\n            const data = response.data.map((element) => {\r\n                return { element };\r\n            });\r\n            for (const [index, value] of data.entries()) {\r\n                stored.push(insertStored(value.element.recId, value.element.storeId, value.element.name));\r\n            }\r\n\r\n            console.log(JSON.stringify(stored))\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_STORE,\r\n                payload: stored\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n// export const fetchAll =  ()=> {\r\n//     return async dispatch => {\r\n//         await api.order().fetchAll()\r\n//         .then(response =>{\r\n//             dispatch({\r\n//                 type: ACTION_TYPES.FETCH_ALL,\r\n//                 payload: response.data\r\n//             })\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n// }","C:\\Projects\\Web\\retail-so-react\\src\\actions\\api.js",["127"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:60658/api/\"\r\n\r\nexport default {\r\n    order(url = baseUrl){\r\n        return  {\r\n            fetchAll : async () => await  axios.get(url + 'order/ชุติมา:4'),\r\n            fetchById : async (id) => await axios.get(url + id),\r\n            fetchLogin : async (user, password) => await axios.get(url + 'login/' + user + '/' + password),\r\n            fetchStore : async (name, type) => await axios.get(url + 'order/store/ชุติมา:4'),\r\n            create : newRecord => axios.post(url, newRecord),\r\n            update : (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete : id => axios.delete(url + id)\r\n        }\r\n    }\r\n   \r\n}\r\n\r\n","C:\\Projects\\Web\\retail-so-react\\src\\actions\\store.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\reducers\\index.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\reducers\\order.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\pages\\Main.js",["128","129","130","131","132","133","134","135","136","137"],"import { ButtonGroup, InputAdornment, List, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar, withStyles } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport useTable from '../components/useTable'\r\nimport * as actions from \"../actions/order\";\r\nimport { connect } from \"react-redux\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { Add, Close, EditOutlined, PhotoLibrary, Search, ViewList } from '@material-ui/icons';\r\nimport MainForm from \"./MainForm\";\r\n\r\nconst styles = () => ({\r\n    paper: {\r\n        padding: '1%',\r\n        marginTop: '3%',\r\n        marginRight: '5%',\r\n        marginLeft: '5%'\r\n    },\r\n    pageContent: {\r\n        margin: '3%',\r\n        padding: '2%',\r\n    },\r\n    searchInput: {\r\n        width: \"75%\",\r\n    },\r\n    newButton: {\r\n        position: \"absolute\",\r\n        right: \"10px\",\r\n    },\r\n})\r\n\r\nconst headCells = [\r\n    { id: \"date\", label: \"วันที่ขาย\" },\r\n    { id: \"storeId\", label: \"Store\" },\r\n    { id: \"pool\", label: \"Pool\" },\r\n    { id: \"qty\", label: \"จำนวน\" },\r\n    { id: \"amount\", label: \"ยอดเงินรวม\" },\r\n    { id: \"dueDate\", label: \"วันที่ติดตั้ง\" },\r\n    { id: \"salesId\", label: \"Sales order\" },\r\n    { id: \"purchId\", label: \"Purchase order\" },\r\n    { id: \"custName\", label: \"ชื่อลูกค้า\" },\r\n    { id: \"action\", label: \"\", disableSoring: true },\r\n]\r\n\r\nconst Main = ({ classes, ...props }) => {\r\n\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [records, setRecords] = useState(props.orderList);\r\n    const [filterFn, setFilterFn] = useState({\r\n        fn: (items) => {\r\n            console.log(JSON.stringify(items))\r\n            return items;\r\n        },\r\n    });\r\n\r\n    const pages = [10, 15, 20, 25, 50];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n    useEffect(() => {\r\n        props.fetchAllOrder();\r\n    }, [])\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination\r\n       \r\n    } = useTable(props.orderList, headCells, filterFn)\r\n\r\n    const handleSearch = (e) => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n          fn: (items) => {\r\n            if (target.value == \"\") return items;\r\n            else\r\n              return items.filter((x) =>\r\n                x.fullName.toLowerCase().includes(target.value)\r\n              );\r\n          },\r\n        });\r\n      };\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === \"desc\"\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            (page + 1) * rowsPerPage\r\n        );\r\n    };\r\n\r\n    const openInPopup = (item) => {\r\n        setRecordForEdit(item);\r\n        //setOpenPopup(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Search></Search>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    ></Controls.Input>\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<Add />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {\r\n                            setOpenPopup(true);\r\n                            setRecordForEdit(null);\r\n                        }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead></TblHead>\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((record, index) => {\r\n                                return (\r\n                                    <TableRow key={record.recId} hover>\r\n                                        <TableCell>{record.date}</TableCell>\r\n                                        <TableCell>{record.storeId}</TableCell>\r\n                                        <TableCell>{record.pool}</TableCell>\r\n                                        <TableCell>{record.qty}</TableCell>\r\n                                        <TableCell>{record.amount}</TableCell>\r\n                                        <TableCell>{record.confirmDate}</TableCell>\r\n                                        <TableCell>{record.salesId}</TableCell>\r\n                                        <TableCell>{record.purchId}</TableCell>\r\n                                        <TableCell>{record.custName}</TableCell>\r\n                                        <TableCell>\r\n                                            <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        openInPopup(record);\r\n                                                    }}\r\n                                                >\r\n                                                    <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"secondary\"\r\n                                                >\r\n                                                    <Close fontSize=\"small\"></Close>\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButtonBadge\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        openInPopup(record);\r\n                                                    }}\r\n                                                >\r\n                                                    <PhotoLibrary fontSize=\"small\"></PhotoLibrary>\r\n                                                </Controls.ActionButtonBadge>\r\n                                                <Controls.ActionButtonBadge\r\n                                                    color=\"secondary\"\r\n                                                >\r\n                                                    <ViewList fontSize=\"small\"></ViewList>\r\n                                                </Controls.ActionButtonBadge>\r\n                                            </ButtonGroup>\r\n\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                )\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination></TblPagination>\r\n            </Paper>\r\n            <Controls.Popup\r\n                title=\"New Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <MainForm></MainForm>\r\n            </Controls.Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllOrder: actions.fetchAll\r\n    //fetchStoreOrder: actions.fetchStore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Main));\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\useTable.js",["138"],"import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        \"& thead th\": {\r\n            fontWeight: \"600\",\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        \"& tbody td\": {\r\n            fontWeight: \"300\",\r\n        },\r\n        \"& tbody tr:hover\": {\r\n            backgroundColor: \"#fffbf2\",\r\n            cursor: \"pointer\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function useTable(records, headCells, filterFn) {\r\n    \r\n    const classes = useStyle();\r\n\r\n    const pages = [10, 15, 20, 25, 50];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n    const TblContainer = (props) => (\r\n        <Table className={classes.table}>{props.children}</Table>\r\n    )\r\n\r\n    const TblHead = (props) => {\r\n\r\n        const handleSortRequest = (cellId) => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? \"desc\" : \"asc\");\r\n            setOrderBy(cellId);\r\n        };\r\n\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    {\r\n                        headCells.map((headCell) => (\r\n                            <TableCell\r\n                                key={headCell.id}\r\n                                sortDirection={orderBy === headCell.id ? order : false}\r\n                            >\r\n                                {headCell.disableSorting ? headCell.label : (\r\n                                    <TableSortLabel\r\n                                        active={orderBy === headCell.id}\r\n                                        direction={orderBy === headCell.id ? order : 'asc'}\r\n                                        onClick={() => {\r\n                                            handleSortRequest(headCell.id);\r\n                                        }}\r\n                                    >\r\n                                        {headCell.label}\r\n                                    </TableSortLabel>\r\n                                )}\r\n\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                </TableRow>\r\n            </TableHead>\r\n        )\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0)\r\n    }\r\n\r\n    const TblPagination = () => (\r\n        <TablePagination\r\n            component=\"div\"\r\n            page={page}\r\n            rowsPerPageOptions={pages}\r\n            rowsPerPage={rowsPerPage}\r\n            count={records.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        >\r\n\r\n        </TablePagination>\r\n    )\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === \"desc\"\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy)).slice(\r\n            page * rowsPerPage,\r\n            (page + 1) * rowsPerPage\r\n        );\r\n    };\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        //recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\Header.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\ActionButton.js",["139"],"import { Badge, Button, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}\r\n        >\r\n            {children}\r\n        </Button>\r\n\r\n    )\r\n}\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Input.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Button.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\ActionButtonBadge.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\pages\\MainForm.js",["140","141","142","143","144","145","146","147","148"],"import { Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { useForm, Form } from '../components/useForm';\r\nimport * as actions from \"../actions/order\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst initialFieldValue = {\r\n    recId: 0,\r\n    date: new Date(),\r\n    storeId: '',\r\n    pool: '',\r\n    qty: 0,\r\n    amount: 0,\r\n    confirmDate: new Date(),\r\n    salesId: '',\r\n    purchId: '',\r\n    custName: '',\r\n    lineCount: 0,\r\n    imageCount: 0\r\n}\r\n\r\nconst initialFieldStoreValue = {\r\n    storeId: '',\r\n    name: '',\r\n}\r\n\r\nconst MainForm = (props) => {\r\n\r\n    const {\r\n      values, \r\n      setValues,\r\n      errors, \r\n      setErrors, \r\n      handleInputChange, \r\n      resetForm \r\n    } = useForm(initialFieldValue);\r\n\r\n    useEffect(() => {\r\n        props.fetchStoreOrder();\r\n    }, [])//componentDidMount\r\n\r\n\r\n    const [stores, setStores] = useState(props.storeList)\r\n\r\n    return (\r\n      \r\n            <Grid container>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"date\"\r\n                        label=\"วันที่ขาย\"\r\n                        value={values.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Store Id\"\r\n                        name=\"storeId\"\r\n                        value={values.storeId}\r\n                        onChange={handleInputChange}\r\n                        //options={stores}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"จำนวน\"\r\n                        name=\"qty\"\r\n                        value={values.qty}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"confirmDate\"\r\n                        label=\"วันที่ติดตั้ง\"\r\n                        value={values.confirmDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Pool\"\r\n                        name=\"pool\"\r\n                        //value={values.pool}\r\n                        //onChange={handleInputChange}\r\n                    //options={}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"ยอดเงินรวม\"\r\n                        name=\"amount\"\r\n                        value={values.amount}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <Controls.Input\r\n                        label=\"ชื่อลูกค้า\"\r\n                        name=\"custName\"\r\n                        value={values.custName}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.Input\r\n                        label=\"Sales order\"\r\n                        name=\"salesId\"\r\n                        value={values.salesId}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.Input\r\n                        label=\"Purchase order\"\r\n                        name=\"purchId\"\r\n                        value={values.purchId}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n             \r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    storeList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchStoreOrder: actions.fetchStore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps) (MainForm);\r\n//export default MainForm;\r\n\r\n\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Popup.js",["149"],"import { Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ActionButton from \"./ActionButton\";\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Form } from '../useForm';\r\nimport Button from './Button';\r\nimport Controls from \"./Controls\";\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Dialog classes={{ paper: classes.dialogWrapper }} open={openPopup} maxWidth=\"md\" >\r\n            <Form>\r\n                <DialogTitle className={classes.dialogTitle}>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                            {title}\r\n                        </Typography>\r\n                        <ActionButton\r\n                            color=\"secondary\"\r\n                            onClick={() => { setOpenPopup(false) }}\r\n                        >\r\n                            <CloseIcon></CloseIcon>\r\n                        </ActionButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    {children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Controls.Button\r\n                        type=\"submit\"\r\n                        text=\"Create\" />\r\n                    <Controls.Button\r\n                        text=\"Cancel\"\r\n                        color=\"default\"\r\n                    //onClick={resetForm}\r\n                    />\r\n                </DialogActions>\r\n            </Form>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\DatePicker.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\components\\controls\\Select.js",["150","151","152"],"import { FormControl, InputLabel,Select as MuiSelect, MenuItem, FormHelperText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../../actions/order\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n// export default function Select(props) {\r\n    const Select = (props) => {\r\n   const { name, label, value,error=null, onChange, options } = props;\r\n\r\n   useEffect(() => {\r\n    props.fetchStoreOrder();\r\n}, [])//componentDidMount\r\n\r\n\r\nconst [stores, setStores] = useState(props.storeList)\r\n\r\nconsole.log(\"Store === \" + JSON.stringify(stores))\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    stores.map(item => (\r\n                        <MenuItem key={item.recId} value={item.storeId}>\r\n                            {item.name}\r\n                        </MenuItem>\r\n                    )\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    storeList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchStoreOrder: actions.fetchStore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps) (Select);\r\n","C:\\Projects\\Web\\retail-so-react\\src\\pages\\GalleryList.js",[],"C:\\Projects\\Web\\retail-so-react\\src\\pages\\Gallery.js",["153","154","155","156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":12},{"ruleId":"164","severity":1,"message":"168","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":13},{"ruleId":"164","severity":1,"message":"169","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":12},{"ruleId":"164","severity":1,"message":"170","line":9,"column":26,"nodeType":"166","messageId":"167","endLine":9,"endColumn":36},{"ruleId":"164","severity":1,"message":"171","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":16},{"ruleId":"164","severity":1,"message":"172","line":1,"column":98,"nodeType":"166","messageId":"167","endLine":1,"endColumn":111},{"ruleId":"164","severity":1,"message":"173","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":12},{"ruleId":"164","severity":1,"message":"174","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"175","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":17},{"ruleId":"164","severity":1,"message":"176","line":6,"column":19,"nodeType":"166","messageId":"167","endLine":6,"endColumn":23},{"ruleId":"164","severity":1,"message":"177","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":22},{"ruleId":"164","severity":1,"message":"178","line":48,"column":25,"nodeType":"166","messageId":"167","endLine":48,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":5,"column":1,"nodeType":"181","endLine":18,"endColumn":2},{"ruleId":"164","severity":1,"message":"182","line":1,"column":39,"nodeType":"166","messageId":"167","endLine":1,"endColumn":43},{"ruleId":"164","severity":1,"message":"170","line":1,"column":45,"nodeType":"166","messageId":"167","endLine":1,"endColumn":55},{"ruleId":"164","severity":1,"message":"183","line":45,"column":12,"nodeType":"166","messageId":"167","endLine":45,"endColumn":25},{"ruleId":"164","severity":1,"message":"184","line":47,"column":21,"nodeType":"166","messageId":"167","endLine":47,"endColumn":31},{"ruleId":"164","severity":1,"message":"185","line":56,"column":18,"nodeType":"166","messageId":"167","endLine":56,"endColumn":25},{"ruleId":"164","severity":1,"message":"186","line":57,"column":25,"nodeType":"166","messageId":"167","endLine":57,"endColumn":39},{"ruleId":"164","severity":1,"message":"187","line":59,"column":19,"nodeType":"166","messageId":"167","endLine":59,"endColumn":27},{"ruleId":"164","severity":1,"message":"188","line":60,"column":21,"nodeType":"166","messageId":"167","endLine":60,"endColumn":31},{"ruleId":"189","severity":1,"message":"190","line":64,"column":8,"nodeType":"191","endLine":64,"endColumn":10,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":77,"column":30,"nodeType":"195","messageId":"196","endLine":77,"endColumn":32},{"ruleId":"164","severity":1,"message":"197","line":124,"column":11,"nodeType":"166","messageId":"167","endLine":124,"endColumn":39},{"ruleId":"164","severity":1,"message":"198","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":15},{"ruleId":"164","severity":1,"message":"176","line":4,"column":19,"nodeType":"166","messageId":"167","endLine":4,"endColumn":23},{"ruleId":"164","severity":1,"message":"199","line":23,"column":7,"nodeType":"166","messageId":"167","endLine":23,"endColumn":29},{"ruleId":"164","severity":1,"message":"200","line":32,"column":7,"nodeType":"166","messageId":"167","endLine":32,"endColumn":16},{"ruleId":"164","severity":1,"message":"201","line":33,"column":7,"nodeType":"166","messageId":"167","endLine":33,"endColumn":13},{"ruleId":"164","severity":1,"message":"202","line":34,"column":7,"nodeType":"166","messageId":"167","endLine":34,"endColumn":16},{"ruleId":"164","severity":1,"message":"203","line":36,"column":7,"nodeType":"166","messageId":"167","endLine":36,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":41,"column":8,"nodeType":"191","endLine":41,"endColumn":10,"suggestions":"204"},{"ruleId":"164","severity":1,"message":"205","line":44,"column":12,"nodeType":"166","messageId":"167","endLine":44,"endColumn":18},{"ruleId":"164","severity":1,"message":"206","line":44,"column":20,"nodeType":"166","messageId":"167","endLine":44,"endColumn":29},{"ruleId":"164","severity":1,"message":"207","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"208","line":9,"column":53,"nodeType":"166","messageId":"167","endLine":9,"endColumn":60},{"ruleId":"189","severity":1,"message":"190","line":13,"column":4,"nodeType":"191","endLine":13,"endColumn":6,"suggestions":"209"},{"ruleId":"164","severity":1,"message":"206","line":16,"column":16,"nodeType":"166","messageId":"167","endLine":16,"endColumn":25},{"ruleId":"164","severity":1,"message":"210","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":18},{"ruleId":"164","severity":1,"message":"211","line":2,"column":27,"nodeType":"166","messageId":"167","endLine":2,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":56,"column":43,"nodeType":"195","messageId":"196","endLine":56,"endColumn":45},{"ruleId":"193","severity":1,"message":"194","line":57,"column":41,"nodeType":"195","messageId":"196","endLine":57,"endColumn":43},{"ruleId":"193","severity":1,"message":"194","line":59,"column":49,"nodeType":"195","messageId":"196","endLine":59,"endColumn":51},{"ruleId":"193","severity":1,"message":"194","line":80,"column":73,"nodeType":"195","messageId":"196","endLine":80,"endColumn":75},{"ruleId":"212","severity":1,"message":"213","line":90,"column":25,"nodeType":"214","endLine":90,"endColumn":77},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Main' is defined but never used.","'makeStyles' is defined but never used.","'Avatar' is defined but never used.","'OutlinedInput' is defined but never used.","'clsx' is defined but never used.","'Controls' is defined but never used.","'useForm' is defined but never used.","'Form' is defined but never used.","'ACTION_TYPES' is defined but never used.","'index' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'List' is defined but never used.","'recordForEdit' is assigned a value but never used.","'setRecords' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'recordsAfterPagingAndSorting' is assigned a value but never used.","'Badge' is defined but never used.","'initialFieldStoreValue' is assigned a value but never used.","'setValues' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'resetForm' is assigned a value but never used.",["218"],"'stores' is assigned a value but never used.","'setStores' is assigned a value but never used.","'Button' is defined but never used.","'options' is assigned a value but never used.",["219"],"'validate' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"220","fix":"223"},"Update the dependencies array to be: [props]",{"range":"224","text":"225"},{"range":"226","text":"225"},{"range":"227","text":"225"},[2053,2055],"[props]",[887,889],[460,462]]